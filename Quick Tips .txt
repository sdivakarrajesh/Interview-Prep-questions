**----**
| Tips |
**----**

For dates and time convert them to lower units to solve them easily and avoid clash

Remember Sieve of Eratosthenes

For checking prime or not just check upto sqrt of that number

Use Two friends algoithm

Use XOR to remove even Counted duplicates

ord for getting ascii in python

chr for getting char equivalent for integers in python

in C preincrement *ptr increases the value at the address by 1

in c postincrement *ptr steps the address x bytes (4 for int, 1 for char etc) 

c = 5,6,7 => gives 5 in c
b = (5,6,7) => gives 7 in c

Recursive calls are placed in stacks - when a function is called by itself before reaching the end, the remaining code gets executed in the reverse fashion

**-----------------------**
| Useful python functions |
**-----------------------**

combinations from collection module
eval() -> for evaluating a mathematical expression
zip()  ->ex: zip([1,2,3,4,5,6],'Hacker')  ->[(1, 'H'), (2, 'a'), (3, 'c'), (4, 'k'), (5, 'e'), (6, 'r')]
*iterableVar -> unzips and gives each element
use listname.insert(0,var) instead of listname = [1] + listname => first one is faster
listname.pop(index)


**-----------------------**
| Useful elements in C++ |
**-----------------------**

variable sized arrays - uses double pointers (Refer : https://www.hackerrank.com/challenges/variable-sized-arrays/problem)

preprocessor directives - http://www.cplusplus.com/doc/tutorial/preprocessor/
------------------------------------------------------------------------------

#define str(s) #s -> here the #s would return the string literal of the argument passed
#define glue(a,b) a##b -> here a##b would concatenate the args without space and returns it

In most programming problems "#define INF 0x3f3f3f3f" is used to define infinity -> use INF 

**-------------------------**
| Concepts - Design pattern |
**-------------------------**

Factory method - https://www.geeksforgeeks.org/design-patterns-set-2-factory-method/

Builder pattern - https://www.geeksforgeeks.org/builder-design-pattern/

Abstract Factory - https://www.geeksforgeeks.org/abstract-factory-pattern/

